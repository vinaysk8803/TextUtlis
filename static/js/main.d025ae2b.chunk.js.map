{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","tittle","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","join","filter","element","Alert","height","alert","msg","App","setMode","setalert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d025ae2b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  // const [myStyle, setMyStyle] = useState({\r\n  //   color: \"black\",\r\n  //   backgroundColor: \"white\",\r\n  // });\r\n  \r\n  let myStyle = {\r\n    color : props.mode ==='dark'?'white':'#042743',\r\n    backgroundColor: props.mode  ==='dark'?'#042743':'white'\r\n  }\r\n \r\n  return (\r\n    <>\r\n      <div className=\"container\" style={myStyle}>\r\n        <h2 className=\"my-3\">About Us</h2>\r\n        <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                style={myStyle}\r\n              >\r\n                <strong> Analyz your Text</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                Here we have an extensive set of web-based text processing tools\r\n                and utilities that will help you automate the recurring tasks of\r\n                editing and formatting huge chunk of text. Using these text\r\n                manipulation tools can save you many hours of typing, and will\r\n                increase your productivity.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n                style={myStyle}\r\n              >\r\n               <strong>Free to use</strong> \r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                You can find a lot of useful text tools here with different\r\n                functions, from sorting data, converting letter case, cleaning\r\n                texts, removing unwanted characters, up to advanced replace\r\n                operations.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n                style={myStyle}\r\n              >\r\n                 <strong> Browser compatible</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                This handy word counting tool runs in all popular web browsers\r\n                such as Firefox, Chrome, Opera, Safari, Internet Explorer...\r\n                This tool is suitable to count words and characters in books,\r\n                essays, novels, blogs, Twitter, Facebook statuses...\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n       \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"#\">{props.tittle}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n              </li>\r\n              \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode ==='light'? 'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleClick = () => {\r\n    // console.log(\"this was click\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to upppercase\",\"primary\");\r\n  };\r\n  const handleLowClick = () => {\r\n    // console.log(\"this was click\" + text);\r\n    let newText = text.toLowerCase();\r\n    props.showAlert(\"Converted to Lowercase\",\"primary\");\r\n\r\n    setText(newText);\r\n  };\r\n  const handleClearClick = () => {\r\n    // console.log(\"this was click\" + text);\r\n    let newText = \"\";\r\n\r\n    setText(newText);\r\n    props.showAlert(\"Text Box has been reset\",\"success\");\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces has been Deleted\",\"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\"\r\n        }}\r\n      >\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            \r\n            style={{\r\n                backgroundColor: props.mode === \"dark\" ? \"#042743\" : \"white\",\r\n                color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n              }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button disabled = {text.length===0} className=\"btn btn-primary mx-2\" onClick={handleClick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLowClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n        <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-4\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your text Summary</h2>\r\n        <p>\r\n          {text.split(\" \").filter((element)=> {return element.length!==0}).length} words, {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").filter((element)=> {return element.length!==0}).length} Minutes for read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n             <div style={{height:'50px'}}>\r\n   {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show `}role=\"alert\">\r\n        <strong>{props.alert.msg}</strong>\r\n       \r\n    </div>}\r\n    </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode enable\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode enable\", \"success\");\n    }\n  };\n  return (\n    <>\n    <Router>\n      <Navbar tittle=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          \n          <Route exact path=\"/\">\n          <TextForm\n          showAlert={showAlert}\n          heading=\"Enter your Text here\"\n          mode={mode}\n        />\n          </Route>\n        </Switch>\n\n      </div>\n       </Router>\n     \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}