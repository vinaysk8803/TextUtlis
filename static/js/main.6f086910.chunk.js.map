{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","tittle","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","length","Alert","alert","msg","App","setMode","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f086910.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.tittle}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n              </li> */}\r\n              \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode ==='light'? 'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleClick = () => {\r\n    // console.log(\"this was click\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to upppercase\",\"primary\");\r\n  };\r\n  const handleLowClick = () => {\r\n    // console.log(\"this was click\" + text);\r\n    let newText = text.toLowerCase();\r\n    props.showAlert(\"Converted to Lowercase\",\"primary\");\r\n\r\n    setText(newText);\r\n  };\r\n  const handleClearClick = () => {\r\n    // console.log(\"this was click\" + text);\r\n    let newText = \"\";\r\n\r\n    setText(newText);\r\n    props.showAlert(\"Text Box has been reset\",\"success\");\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces has been Deleted\",\"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\"\r\n        }}\r\n      >\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            \r\n            style={{\r\n                backgroundColor: props.mode === \"dark\" ? \"#042743\" : \"white\",\r\n                color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n              }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-4\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your text Summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words, {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes for read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Something in textbox above\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show `}role=\"alert\">\r\n        <strong>{props.alert.msg}</strong>\r\n       \r\n    </div>\r\n    )\r\n}\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode enable\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode enable\", \"success\");\n    }\n  };\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar tittle=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route exact path=\"/\"> */}\n          <TextForm\n          showAlert={showAlert}\n          heading=\"Enter your Text here\"\n          mode={mode}\n        />\n          {/* </Route>\n        </Switch> */}\n\n      </div>\n       {/* </Router> */}\n     \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}